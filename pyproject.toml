[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "wags"
version = "0.0.0.dev0"
description = "WAGS - Middleware orchestration for MCP servers with FastMCP"
requires-python = ">=3.13.5"

dependencies = [
    "mcp @ git+https://github.com/chughtapan/python-sdk.git@wags-dev",
    "fast-agent-mcp @ git+https://github.com/chughtapan/fast-agent.git@wags-dev",
    "fastmcp @ git+https://github.com/chughtapan/fastmcp.git@wags-dev",
    "cyclopts>=2.0.0",
    "rich>=13.0.0",
    "jinja2>=3.0.0",
]

[project.scripts]
wags = "wags.cli.main:cli"

[tool.setuptools.packages.find]
where = ["src"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "ruff",
    "mypy",
]

bfcl = [
    "bfcl-eval",
    "jinja2>=3.0.0",
    "python-dotenv>=1.0.0",
]

mcpuniverse-eval = [
    "mcpuniverse",
    "jinja2>=3.0.0",
    "python-dotenv>=1.0.0",
]

evals = [
    "bfcl-eval",
    "mcpuniverse",
    "jinja2>=3.0.0",
    "python-dotenv>=1.0.0",
]

[tool.uv.sources]
bfcl-eval = { git = "https://github.com/chughtapan/gorilla.git", subdirectory = "berkeley-function-call-leaderboard", branch = "wags-dev" }
mcpuniverse = { git = "https://github.com/vinamra57/MCP-Universe.git", branch = "wags-dev" }

[tool.uv]
override-dependencies = [
    "openai>=1.108.0",  # Override mcpuniverse's openai==1.106.1 constraint (required by existing FastAgent integrations)
    "anthropic>=0.68.0",  # Override mcpuniverse's anthropic==0.49.0 constraint
    "google-genai>=1.33.0",  # Override mcpuniverse's google-genai==1.16.1 constraint
    "mistralai>=1.7.0",  # Override mcpuniverse's mistralai==1.6.0 constraint
    "python-dotenv>=1.1.0",  # Override mcpuniverse's python-dotenv==1.0.1 constraint
    "mcp>=1.19.0",  # Align with wags core MCP runtime
]
[tool.ruff]
line-length = 120
target-version = "py313"
extend-exclude = ["README.md"]

[tool.ruff.lint]
select = [
    "C4",    # flake8-comprehensions
    "C90",   # mccabe
    "E",     # pycodestyle
    "F",     # pyflakes
    "I",     # isort
    "PERF",  # Perflint
    "PL",    # Pylint
    "UP",    # pyupgrade
]
ignore = ["PERF203", "PLC0415", "PLR0402"]

[tool.ruff.lint.per-file-ignores]
# Handler methods have many required parameters matching API signatures
"servers/*/handlers.py" = ["PLR0913"]
# CLI commands naturally have many parameters (one per flag/option)
"src/wags/cli/main.py" = ["PLR0913"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["bytes", "float", "int", "str"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-v --tb=short"
# Only run unit and integration tests by default
norecursedirs = ["tests/benchmarks", "tests/e2e", "tests/smoke"]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_subclassing_any = true
disallow_untyped_calls = true

[[tool.mypy.overrides]]
module = "bfcl_eval.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mcpuniverse.*"
ignore_missing_imports = true

